{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { EventEmitter, Input, Output, Component } from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\nlet NgxMaterialTimepickerHoursFace = class NgxMaterialTimepickerHoursFace {\n  constructor(format) {\n    this.hourChange = new EventEmitter();\n    this.hourSelected = new EventEmitter();\n    this.hoursList = [];\n    this.hoursList = TimepickerTimeUtils.getHours(format);\n  }\n\n  onTimeSelected(time) {\n    this.hourSelected.next(time);\n  }\n\n};\n\n__decorate([Input(), __metadata(\"design:type\", Object)], NgxMaterialTimepickerHoursFace.prototype, \"selectedHour\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", DateTime)], NgxMaterialTimepickerHoursFace.prototype, \"minTime\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", DateTime)], NgxMaterialTimepickerHoursFace.prototype, \"maxTime\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], NgxMaterialTimepickerHoursFace.prototype, \"format\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], NgxMaterialTimepickerHoursFace.prototype, \"hourChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], NgxMaterialTimepickerHoursFace.prototype, \"hourSelected\", void 0);\n\nNgxMaterialTimepickerHoursFace = __decorate([Component({\n  template: ''\n}), __metadata(\"design:paramtypes\", [Number])], NgxMaterialTimepickerHoursFace);\nexport { NgxMaterialTimepickerHoursFace };","map":null,"metadata":{},"sourceType":"module"}