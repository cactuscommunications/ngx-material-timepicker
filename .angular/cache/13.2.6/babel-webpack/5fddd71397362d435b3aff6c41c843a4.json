{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let NgxMaterialTimepickerEventService = /*#__PURE__*/(() => {\n  class NgxMaterialTimepickerEventService {\n    constructor() {\n      this.backdropClickSubject = new Subject();\n      this.keydownEventSubject = new Subject();\n    }\n\n    get backdropClick() {\n      return this.backdropClickSubject.asObservable().pipe(shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }));\n    }\n\n    get keydownEvent() {\n      return this.keydownEventSubject.asObservable().pipe(shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }));\n    }\n\n    dispatchEvent(event) {\n      switch (event.type) {\n        case 'click':\n          this.backdropClickSubject.next(event);\n          break;\n\n        case 'keydown':\n          this.keydownEventSubject.next(event);\n          break;\n\n        default:\n          throw new Error('no such event type');\n      }\n    }\n\n  }\n\n  NgxMaterialTimepickerEventService.ɵfac = function NgxMaterialTimepickerEventService_Factory(t) {\n    return new (t || NgxMaterialTimepickerEventService)();\n  };\n\n  NgxMaterialTimepickerEventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NgxMaterialTimepickerEventService,\n    factory: NgxMaterialTimepickerEventService.ɵfac,\n    providedIn: 'root'\n  });\n  return NgxMaterialTimepickerEventService;\n})();","map":null,"metadata":{},"sourceType":"module"}