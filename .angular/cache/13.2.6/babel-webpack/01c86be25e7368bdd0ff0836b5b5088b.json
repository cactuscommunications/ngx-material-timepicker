{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let AutofocusDirective = /*#__PURE__*/(() => {\n  class AutofocusDirective {\n    constructor(element, document) {\n      this.element = element;\n      this.document = document;\n      this.activeElement = this.document.activeElement;\n    }\n\n    ngOnChanges() {\n      if (this.isFocusActive) {\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n        setTimeout(() => this.element.nativeElement.focus({\n          preventScroll: true\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n      setTimeout(() => this.activeElement.focus({\n        preventScroll: true\n      }));\n    }\n\n  }\n\n  AutofocusDirective.ɵfac = function AutofocusDirective_Factory(t) {\n    return new (t || AutofocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT, 8));\n  };\n\n  AutofocusDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AutofocusDirective,\n    selectors: [[\"\", \"timepickerAutofocus\", \"\"]],\n    inputs: {\n      isFocusActive: [\"timepickerAutofocus\", \"isFocusActive\"]\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return AutofocusDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}