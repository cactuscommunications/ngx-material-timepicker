{"ast":null,"code":"import { TIME_LOCALE } from '../tokens/time-locale.token';\nimport { TimeUnit } from '../models/time-unit.enum';\nimport { DateTime } from 'luxon';\nimport * as i0 from \"@angular/core\";\nexport let TimeLocalizerPipe = /*#__PURE__*/(() => {\n  class TimeLocalizerPipe {\n    constructor(locale) {\n      this.locale = locale;\n    }\n\n    transform(time, timeUnit, isKeyboardEnabled = false) {\n      if (time == null || time === '') {\n        return '';\n      }\n\n      switch (timeUnit) {\n        case TimeUnit.HOUR:\n          {\n            const format = time === 0 || isKeyboardEnabled ? 'HH' : 'H';\n            return this.formatTime('hour', time, format);\n          }\n\n        case TimeUnit.MINUTE:\n          return this.formatTime('minute', time, 'mm');\n\n        default:\n          throw new Error(`There is no Time Unit with type ${timeUnit}`);\n      }\n    }\n\n    formatTime(timeMeasure, time, format) {\n      try {\n        return DateTime.fromObject({\n          [timeMeasure]: +time\n        }).setLocale(this.locale).toFormat(format);\n      } catch (_a) {\n        throw new Error(`Cannot format provided time - ${time} to locale - ${this.locale}`);\n      }\n    }\n\n  }\n\n  TimeLocalizerPipe.ɵfac = function TimeLocalizerPipe_Factory(t) {\n    return new (t || TimeLocalizerPipe)(i0.ɵɵdirectiveInject(TIME_LOCALE, 16));\n  };\n\n  TimeLocalizerPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"timeLocalizer\",\n    type: TimeLocalizerPipe,\n    pure: true\n  });\n  return TimeLocalizerPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}