{"ast":null,"code":"import { SimpleChanges } from '@angular/core';\nimport { NgxMaterialTimepickerHoursFace } from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../timepicker-face/ngx-material-timepicker-face.component\";\nexport let NgxMaterialTimepicker12HoursFaceComponent = /*#__PURE__*/(() => {\n  class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace {\n    constructor() {\n      super(12);\n    }\n\n    ngOnChanges(changes) {\n      if (changes['period'] && changes['period'].currentValue) {\n        this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n          min: this.minTime,\n          max: this.maxTime,\n          format: this.format,\n          period: this.period\n        });\n      }\n    }\n\n  }\n\n  NgxMaterialTimepicker12HoursFaceComponent.ɵfac = function NgxMaterialTimepicker12HoursFaceComponent_Factory(t) {\n    return new (t || NgxMaterialTimepicker12HoursFaceComponent)();\n  };\n\n  NgxMaterialTimepicker12HoursFaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxMaterialTimepicker12HoursFaceComponent,\n    selectors: [[\"ngx-material-timepicker-12-hours-face\"]],\n    inputs: {\n      period: \"period\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"selectedTime\", \"faceTime\", \"timeChange\", \"timeSelected\"]],\n    template: function NgxMaterialTimepicker12HoursFaceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-material-timepicker-face\", 0);\n        i0.ɵɵlistener(\"timeChange\", function NgxMaterialTimepicker12HoursFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener($event) {\n          return ctx.hourChange.next($event);\n        })(\"timeSelected\", function NgxMaterialTimepicker12HoursFaceComponent_Template_ngx_material_timepicker_face_timeSelected_0_listener($event) {\n          return ctx.onTimeSelected($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"selectedTime\", ctx.selectedHour)(\"faceTime\", ctx.hoursList);\n      }\n    },\n    directives: [i1.NgxMaterialTimepickerFaceComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NgxMaterialTimepicker12HoursFaceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}