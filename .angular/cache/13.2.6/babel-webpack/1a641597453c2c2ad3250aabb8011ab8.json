{"ast":null,"code":"import { TimeAdapter } from '../services/time-adapter';\nimport { TimeFormat } from '../models/time-format.enum';\nimport { DateTime } from 'luxon'; // @dynamic\n\nexport class TimepickerTimeUtils {\n  static getHours(format) {\n    return Array(format).fill(1).map((v, i) => {\n      const angleStep = 30;\n      const time = v + i;\n      const angle = angleStep * time;\n      return {\n        time: time === 24 ? 0 : time,\n        angle\n      };\n    });\n  }\n\n  static disableHours(hours, config) {\n    if (config.min || config.max) {\n      return hours.map(value => {\n        const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\n        const currentTime = DateTime.fromObject({\n          hour\n        }).toFormat(TimeFormat.TWELVE);\n        return Object.assign(Object.assign({}, value), {\n          disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\n        });\n      });\n    }\n\n    return hours;\n  }\n\n  static getMinutes(gap = 1) {\n    const minutesCount = 60;\n    const angleStep = 360 / minutesCount;\n    const minutes = [];\n\n    for (let i = 0; i < minutesCount; i++) {\n      const angle = angleStep * i;\n\n      if (i % gap === 0) {\n        minutes.push({\n          time: i,\n          angle: angle !== 0 ? angle : 360\n        });\n      }\n    }\n\n    return minutes;\n  }\n\n  static disableMinutes(minutes, selectedHour, config) {\n    if (config.min || config.max) {\n      const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n      return minutes.map(value => {\n        const currentTime = DateTime.fromObject({\n          hour,\n          minute: value.time\n        }).toFormat(TimeFormat.TWELVE);\n        return Object.assign(Object.assign({}, value), {\n          disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\n        });\n      });\n    }\n\n    return minutes;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}