{"ast":null,"code":"import { EventEmitter, SimpleChanges, TemplateRef } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { DateTime, Info } from 'luxon';\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../timepicker-dial-control/ngx-material-timepicker-dial-control.component\";\nimport * as i2 from \"../timepicker-period/ngx-material-timepicker-period.component\";\nimport * as i3 from \"@angular/common\";\n\nfunction NgxMaterialTimepickerDialComponent_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NgxMaterialTimepickerDialComponent_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \" * use arrows (\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"\\u21C5\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \") to change the time\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"timepicker-dial__hint-container--hidden\": a0\n  };\n};\n\nfunction NgxMaterialTimepickerDialComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerDialComponent_div_8_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, NgxMaterialTimepickerDialComponent_div_8_ng_template_2_Template, 5, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(3);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, !ctx_r0.isHintVisible));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.editableHintTmpl ? ctx_r0.editableHintTmpl : _r2);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"timepicker-dial__period--hidden\": a0\n  };\n};\n\nexport let NgxMaterialTimepickerDialComponent = /*#__PURE__*/(() => {\n  class NgxMaterialTimepickerDialComponent {\n    constructor(locale) {\n      this.locale = locale;\n      this.timeUnit = TimeUnit;\n      this.meridiems = Info.meridiems({\n        locale: this.locale\n      });\n      this.periodChanged = new EventEmitter();\n      this.timeUnitChanged = new EventEmitter();\n      this.hourChanged = new EventEmitter();\n      this.minuteChanged = new EventEmitter();\n    }\n\n    ngOnChanges(changes) {\n      if (changes['period'] && changes['period'].currentValue || changes['format'] && changes['format'].currentValue) {\n        const hours = TimepickerTimeUtils.getHours(this.format);\n        this.hours = TimepickerTimeUtils.disableHours(hours, {\n          min: this.minTime,\n          max: this.maxTime,\n          format: this.format,\n          period: this.period\n        });\n      }\n\n      if (changes['period'] && changes['period'].currentValue || changes['hour'] && changes['hour'].currentValue) {\n        const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n        this.minutes = TimepickerTimeUtils.disableMinutes(minutes, +this.hour, {\n          min: this.minTime,\n          max: this.maxTime,\n          format: this.format,\n          period: this.period\n        });\n      }\n    }\n\n    changeTimeUnit(unit) {\n      this.timeUnitChanged.next(unit);\n    }\n\n    changePeriod(period) {\n      this.periodChanged.next(period);\n    }\n\n    changeHour(hour) {\n      this.hourChanged.next(hour);\n    }\n\n    changeMinute(minute) {\n      this.minuteChanged.next(minute);\n    }\n\n    showHint() {\n      this.isHintVisible = true;\n    }\n\n    hideHint() {\n      this.isHintVisible = false;\n    }\n\n  }\n\n  NgxMaterialTimepickerDialComponent.ɵfac = function NgxMaterialTimepickerDialComponent_Factory(t) {\n    return new (t || NgxMaterialTimepickerDialComponent)(i0.ɵɵdirectiveInject(TIME_LOCALE));\n  };\n\n  NgxMaterialTimepickerDialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxMaterialTimepickerDialComponent,\n    selectors: [[\"ngx-material-timepicker-dial\"]],\n    inputs: {\n      editableHintTmpl: \"editableHintTmpl\",\n      hour: \"hour\",\n      minute: \"minute\",\n      format: \"format\",\n      period: \"period\",\n      activeTimeUnit: \"activeTimeUnit\",\n      minTime: \"minTime\",\n      maxTime: \"maxTime\",\n      isEditable: \"isEditable\",\n      minutesGap: \"minutesGap\",\n      hoursOnly: \"hoursOnly\"\n    },\n    outputs: {\n      periodChanged: \"periodChanged\",\n      timeUnitChanged: \"timeUnitChanged\",\n      hourChanged: \"hourChanged\",\n      minuteChanged: \"minuteChanged\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 9,\n    vars: 25,\n    consts: [[1, \"timepicker-dial\"], [1, \"timepicker-dial__container\"], [1, \"timepicker-dial__time\"], [3, \"timeList\", \"time\", \"timeUnit\", \"isActive\", \"isEditable\", \"timeUnitChanged\", \"timeChanged\", \"focused\", \"unfocused\"], [3, \"timeList\", \"time\", \"timeUnit\", \"isActive\", \"isEditable\", \"minutesGap\", \"disabled\", \"timeUnitChanged\", \"timeChanged\", \"focused\", \"unfocused\"], [1, \"timepicker-dial__period\", 3, \"ngClass\", \"selectedPeriod\", \"activeTimeUnit\", \"maxTime\", \"minTime\", \"format\", \"hours\", \"minutes\", \"selectedHour\", \"meridiems\", \"periodChanged\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [4, \"ngTemplateOutlet\"], [\"editableHintDefault\", \"\"], [1, \"timepicker-dial__hint\"]],\n    template: function NgxMaterialTimepickerDialComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"ngx-material-timepicker-dial-control\", 3);\n        i0.ɵɵlistener(\"timeUnitChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeUnitChanged_3_listener($event) {\n          return ctx.changeTimeUnit($event);\n        })(\"timeChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeChanged_3_listener($event) {\n          return ctx.changeHour($event);\n        })(\"focused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_focused_3_listener() {\n          return ctx.showHint();\n        })(\"unfocused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_unfocused_3_listener() {\n          return ctx.hideHint();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ngx-material-timepicker-dial-control\", 4);\n        i0.ɵɵlistener(\"timeUnitChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeUnitChanged_6_listener($event) {\n          return ctx.changeTimeUnit($event);\n        })(\"timeChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_timeChanged_6_listener($event) {\n          return ctx.changeMinute($event);\n        })(\"focused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_focused_6_listener() {\n          return ctx.showHint();\n        })(\"unfocused\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_dial_control_unfocused_6_listener() {\n          return ctx.hideHint();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"ngx-material-timepicker-period\", 5);\n        i0.ɵɵlistener(\"periodChanged\", function NgxMaterialTimepickerDialComponent_Template_ngx_material_timepicker_period_periodChanged_7_listener($event) {\n          return ctx.changePeriod($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, NgxMaterialTimepickerDialComponent_div_8_Template, 4, 4, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"timeList\", ctx.hours)(\"time\", ctx.hour)(\"timeUnit\", ctx.timeUnit.HOUR)(\"isActive\", ctx.activeTimeUnit === ctx.timeUnit.HOUR)(\"isEditable\", ctx.isEditable);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"timeList\", ctx.minutes)(\"time\", ctx.minute)(\"timeUnit\", ctx.timeUnit.MINUTE)(\"isActive\", ctx.activeTimeUnit === ctx.timeUnit.MINUTE)(\"isEditable\", ctx.isEditable)(\"minutesGap\", ctx.minutesGap)(\"disabled\", ctx.hoursOnly);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c1, ctx.format === 24))(\"selectedPeriod\", ctx.period)(\"activeTimeUnit\", ctx.activeTimeUnit)(\"maxTime\", ctx.maxTime)(\"minTime\", ctx.minTime)(\"format\", ctx.format)(\"hours\", ctx.hours)(\"minutes\", ctx.minutes)(\"selectedHour\", ctx.hour)(\"meridiems\", ctx.meridiems);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isEditable || ctx.editableHintTmpl);\n      }\n    },\n    directives: [i1.NgxMaterialTimepickerDialControlComponent, i2.NgxMaterialTimepickerPeriodComponent, i3.NgClass, i3.NgIf, i3.NgTemplateOutlet],\n    styles: [\".timepicker-dial[_ngcontent-%COMP%]{text-align:right}.timepicker-dial__container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;-webkit-tap-highlight-color:rgba(0,0,0,0)}.timepicker-dial__time[_ngcontent-%COMP%]{display:flex;align-items:baseline;line-height:normal;font-size:50px;color:#ffffff80;font-family:Roboto,sans-serif}@supports (font-family: var(--primary-font-family)){.timepicker-dial__time[_ngcontent-%COMP%]{font-family:var(--primary-font-family);color:var(--dial-inactive-color)}}.timepicker-dial__period[_ngcontent-%COMP%]{display:block;margin-left:10px}.timepicker-dial__period--hidden[_ngcontent-%COMP%], .timepicker-dial__hint-container--hidden[_ngcontent-%COMP%]{visibility:hidden}.timepicker-dial__hint[_ngcontent-%COMP%]{display:inline-block;font-size:10px;color:#fff}@supports (color: var(--dial-active-color)){.timepicker-dial__hint[_ngcontent-%COMP%]{color:var(--dial-active-color)}}.timepicker-dial__hint[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px}@media (max-device-width: 1023px) and (orientation: landscape){.timepicker-dial__container[_ngcontent-%COMP%]{flex-direction:column}.timepicker-dial__period[_ngcontent-%COMP%]{margin-left:0}}\"],\n    changeDetection: 0\n  });\n  return NgxMaterialTimepickerDialComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}