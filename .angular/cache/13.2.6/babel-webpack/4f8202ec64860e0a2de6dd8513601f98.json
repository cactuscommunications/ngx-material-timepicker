{"ast":null,"code":"import { EventEmitter, SimpleChanges } from '@angular/core';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { DateTime } from 'luxon';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../timepicker-face/ngx-material-timepicker-face.component\";\nexport let NgxMaterialTimepickerMinutesFaceComponent = /*#__PURE__*/(() => {\n  class NgxMaterialTimepickerMinutesFaceComponent {\n    constructor() {\n      this.minutesList = [];\n      this.timeUnit = TimeUnit;\n      this.minuteChange = new EventEmitter();\n    }\n\n    ngOnChanges(changes) {\n      if (changes['period'] && changes['period'].currentValue) {\n        const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n        this.minutesList = TimepickerTimeUtils.disableMinutes(minutes, this.selectedHour, {\n          min: this.minTime,\n          max: this.maxTime,\n          format: this.format,\n          period: this.period\n        });\n      }\n    }\n\n  }\n\n  NgxMaterialTimepickerMinutesFaceComponent.ɵfac = function NgxMaterialTimepickerMinutesFaceComponent_Factory(t) {\n    return new (t || NgxMaterialTimepickerMinutesFaceComponent)();\n  };\n\n  NgxMaterialTimepickerMinutesFaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxMaterialTimepickerMinutesFaceComponent,\n    selectors: [[\"ngx-material-timepicker-minutes-face\"]],\n    inputs: {\n      selectedMinute: \"selectedMinute\",\n      selectedHour: \"selectedHour\",\n      period: \"period\",\n      minTime: \"minTime\",\n      maxTime: \"maxTime\",\n      format: \"format\",\n      minutesGap: \"minutesGap\"\n    },\n    outputs: {\n      minuteChange: \"minuteChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 4,\n    consts: [[3, \"faceTime\", \"selectedTime\", \"minutesGap\", \"unit\", \"timeChange\"]],\n    template: function NgxMaterialTimepickerMinutesFaceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-material-timepicker-face\", 0);\n        i0.ɵɵlistener(\"timeChange\", function NgxMaterialTimepickerMinutesFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener($event) {\n          return ctx.minuteChange.next($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"faceTime\", ctx.minutesList)(\"selectedTime\", ctx.selectedMinute)(\"minutesGap\", ctx.minutesGap)(\"unit\", ctx.timeUnit.MINUTE);\n      }\n    },\n    directives: [i1.NgxMaterialTimepickerFaceComponent],\n    encapsulation: 2\n  });\n  return NgxMaterialTimepickerMinutesFaceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}