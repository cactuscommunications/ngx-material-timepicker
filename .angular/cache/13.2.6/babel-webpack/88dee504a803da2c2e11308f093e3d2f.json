{"ast":null,"code":"import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector, Type } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let DomService = /*#__PURE__*/(() => {\n  class DomService {\n    constructor(cfr, appRef, injector, document) {\n      this.cfr = cfr;\n      this.appRef = appRef;\n      this.injector = injector;\n      this.document = document;\n    }\n\n    appendTimepickerToBody(timepicker, config) {\n      this.componentRef = this.cfr.resolveComponentFactory(timepicker).create(this.injector);\n      Object.keys(config).forEach(key => this.componentRef.instance[key] = config[key]);\n      this.appRef.attachView(this.componentRef.hostView);\n      const domElement = this.componentRef.hostView.rootNodes[0];\n      this.document.body.appendChild(domElement);\n    }\n\n    destroyTimepicker() {\n      this.componentRef.destroy();\n      this.appRef.detachView(this.componentRef.hostView);\n    }\n\n  }\n\n  DomService.ɵfac = function DomService_Factory(t) {\n    return new (t || DomService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DOCUMENT, 8));\n  };\n\n  DomService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DomService,\n    factory: DomService.ɵfac,\n    providedIn: 'root'\n  });\n  return DomService;\n})();","map":null,"metadata":{},"sourceType":"module"}