{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let NgxMaterialTimepickerThemeDirective = /*#__PURE__*/(() => {\n  class NgxMaterialTimepickerThemeDirective {\n    constructor(elementRef) {\n      this.element = elementRef.nativeElement;\n    }\n\n    ngAfterViewInit() {\n      if (this.theme) {\n        this.setTheme(this.theme);\n      }\n    }\n\n    setTheme(theme) {\n      for (const val in theme) {\n        if (theme.hasOwnProperty(val)) {\n          if (typeof theme[val] === 'string') {\n            for (const prop in theme) {\n              if (theme.hasOwnProperty(prop)) {\n                this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n              }\n            }\n\n            return;\n          }\n\n          this.setTheme(theme[val]);\n        }\n      }\n    }\n\n  }\n\n  NgxMaterialTimepickerThemeDirective.ɵfac = function NgxMaterialTimepickerThemeDirective_Factory(t) {\n    return new (t || NgxMaterialTimepickerThemeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  NgxMaterialTimepickerThemeDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: NgxMaterialTimepickerThemeDirective,\n    selectors: [[\"\", \"ngxMaterialTimepickerTheme\", \"\"]],\n    inputs: {\n      theme: [\"ngxMaterialTimepickerTheme\", \"theme\"]\n    }\n  });\n  return NgxMaterialTimepickerThemeDirective;\n})();\n\nfunction camelCaseToDash(myStr) {\n  return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}","map":null,"metadata":{},"sourceType":"module"}