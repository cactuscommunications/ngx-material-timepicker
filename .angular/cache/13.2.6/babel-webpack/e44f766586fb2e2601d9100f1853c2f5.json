{"ast":null,"code":"import { TemplateRef } from '@angular/core';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';\nimport { Subject } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport { TimeAdapter } from '../../services/time-adapter';\nimport { NgxMaterialTimepickerEventService } from '../../services/ngx-material-timepicker-event.service';\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/ngx-material-timepicker.service\";\nimport * as i2 from \"../../services/ngx-material-timepicker-event.service\";\nimport * as i3 from \"../../directives/overlay.directive\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../ngx-material-timepicker-content/ngx-material-timepicker-content.component\";\nimport * as i6 from \"../../directives/ngx-material-timepicker-theme.directive\";\nimport * as i7 from \"../timepicker-dial/ngx-material-timepicker-dial.component\";\nimport * as i8 from \"../timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component\";\nimport * as i9 from \"../timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component\";\nimport * as i10 from \"../timepicker-minutes-face/ngx-material-timepicker-minutes-face.component\";\nimport * as i11 from \"../timepicker-button/ngx-material-timepicker-button.component\";\n\nfunction NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-24-hours-face\", 17);\n    i0.ɵɵlistener(\"hourChange\", function NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template_ngx_material_timepicker_24_hours_face_hourChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onHourChange($event);\n    })(\"hourSelected\", function NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template_ngx_material_timepicker_24_hours_face_hourSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onHourSelected($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"selectedHour\", i0.ɵɵpipeBind1(1, 4, ctx_r8.selectedHour))(\"minTime\", ctx_r8.minTime)(\"maxTime\", ctx_r8.maxTime)(\"format\", ctx_r8.format);\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-12-hours-face\", 18);\n    i0.ɵɵlistener(\"hourChange\", function NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template_ngx_material_timepicker_12_hours_face_hourChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onHourChange($event);\n    })(\"hourSelected\", function NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template_ngx_material_timepicker_12_hours_face_hourSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onHourSelected($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"selectedHour\", i0.ɵɵpipeBind1(1, 4, ctx_r10.selectedHour))(\"period\", i0.ɵɵpipeBind1(2, 6, ctx_r10.selectedPeriod))(\"minTime\", ctx_r10.minTime)(\"maxTime\", ctx_r10.maxTime);\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NgxMaterialTimepickerContainerComponent_div_11_ngx_material_timepicker_24_hours_face_1_Template, 2, 6, \"ngx-material-timepicker-24-hours-face\", 15);\n    i0.ɵɵtemplate(2, NgxMaterialTimepickerContainerComponent_div_11_ng_template_2_Template, 3, 8, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(3);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.format === 24)(\"ngIfElse\", _r9);\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-minutes-face\", 19);\n    i0.ɵɵlistener(\"minuteChange\", function NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template_ngx_material_timepicker_minutes_face_minuteChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onMinuteChange($event);\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵproperty(\"selectedMinute\", i0.ɵɵpipeBind1(1, 7, ctx_r1.selectedMinute))(\"selectedHour\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 9, ctx_r1.selectedHour)) == null ? null : tmp_1_0.time)(\"minTime\", ctx_r1.minTime)(\"maxTime\", ctx_r1.maxTime)(\"format\", ctx_r1.format)(\"period\", i0.ɵɵpipeBind1(3, 11, ctx_r1.selectedPeriod))(\"minutesGap\", ctx_r1.minutesGap);\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-button\");\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgxMaterialTimepickerContainerComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-material-timepicker-button\");\n    i0.ɵɵtext(1, \"Ok\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"timepicker-backdrop-overlay--transparent\": a0\n  };\n};\n\nexport var AnimationState = /*#__PURE__*/(() => {\n  (function (AnimationState) {\n    AnimationState[\"ENTER\"] = \"enter\";\n    AnimationState[\"LEAVE\"] = \"leave\";\n  })(AnimationState || (AnimationState = {}));\n\n  return AnimationState;\n})();\nexport let NgxMaterialTimepickerContainerComponent = /*#__PURE__*/(() => {\n  class NgxMaterialTimepickerContainerComponent {\n    constructor(timepickerService, eventService, locale) {\n      this.timepickerService = timepickerService;\n      this.eventService = eventService;\n      this.locale = locale;\n      this.timeUnit = TimeUnit;\n      this.activeTimeUnit = TimeUnit.HOUR;\n      this.unsubscribe = new Subject();\n    }\n\n    set defaultTime(time) {\n      this._defaultTime = time;\n      this.setDefaultTime(time);\n    }\n\n    get defaultTime() {\n      return this._defaultTime;\n    }\n\n    onKeydown(e) {\n      this.eventService.dispatchEvent(e);\n      e.stopPropagation();\n    }\n\n    ngOnInit() {\n      this.animationState = !this.disableAnimation && AnimationState.ENTER;\n      this.defineTime();\n      this.selectedHour = this.timepickerService.selectedHour.pipe(shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }));\n      this.selectedMinute = this.timepickerService.selectedMinute.pipe(shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }));\n      this.selectedPeriod = this.timepickerService.selectedPeriod.pipe(shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }));\n      this.timepickerBaseRef.timeUpdated.pipe(takeUntil(this.unsubscribe)).subscribe(this.setDefaultTime.bind(this));\n    }\n\n    onHourChange(hour) {\n      this.timepickerService.hour = hour;\n      this.onTimeChange();\n    }\n\n    onHourSelected(hour) {\n      if (!this.hoursOnly) {\n        this.changeTimeUnit(TimeUnit.MINUTE);\n      }\n\n      this.timepickerBaseRef.hourSelected.next(hour);\n    }\n\n    onMinuteChange(minute) {\n      this.timepickerService.minute = minute;\n      this.onTimeChange();\n    }\n\n    changePeriod(period) {\n      this.timepickerService.period = period;\n      this.onTimeChange();\n    }\n\n    changeTimeUnit(unit) {\n      this.activeTimeUnit = unit;\n    }\n\n    setTime() {\n      this.timepickerBaseRef.timeSet.next(this.timepickerService.getFullTime(this.format));\n      this.close();\n    }\n\n    close() {\n      if (this.disableAnimation) {\n        this.timepickerBaseRef.close();\n        return;\n      }\n\n      this.animationState = AnimationState.LEAVE;\n    }\n\n    animationDone(event) {\n      if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n        this.timepickerBaseRef.close();\n      }\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe.next();\n      this.unsubscribe.complete();\n    }\n\n    setDefaultTime(time) {\n      this.timepickerService.setDefaultTimeIfAvailable(time, this.minTime, this.maxTime, this.format, this.minutesGap);\n    }\n\n    defineTime() {\n      const minTime = this.minTime;\n\n      if (minTime && !this.time && !this.defaultTime) {\n        const time = TimeAdapter.fromDateTimeToString(minTime, this.format);\n        this.setDefaultTime(time);\n      }\n    }\n\n    onTimeChange() {\n      const time = TimeAdapter.toLocaleTimeString(this.timepickerService.getFullTime(this.format), {\n        locale: this.locale,\n        format: this.format\n      });\n      this.timepickerBaseRef.timeChanged.emit(time);\n    }\n\n  }\n\n  NgxMaterialTimepickerContainerComponent.ɵfac = function NgxMaterialTimepickerContainerComponent_Factory(t) {\n    return new (t || NgxMaterialTimepickerContainerComponent)(i0.ɵɵdirectiveInject(i1.NgxMaterialTimepickerService), i0.ɵɵdirectiveInject(i2.NgxMaterialTimepickerEventService), i0.ɵɵdirectiveInject(TIME_LOCALE));\n  };\n\n  NgxMaterialTimepickerContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NgxMaterialTimepickerContainerComponent,\n    selectors: [[\"ngx-material-timepicker-container\"]],\n    hostBindings: function NgxMaterialTimepickerContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function NgxMaterialTimepickerContainerComponent_keydown_HostBindingHandler($event) {\n          return ctx.onKeydown($event);\n        });\n      }\n    },\n    inputs: {\n      defaultTime: \"defaultTime\"\n    },\n    features: [i0.ɵɵProvidersFeature([NgxMaterialTimepickerService])],\n    decls: 22,\n    vars: 31,\n    consts: [[1, \"timepicker-backdrop-overlay\", 3, \"overlay\", \"ngClass\"], [1, \"timepicker-overlay\"], [3, \"appendToInput\", \"inputElement\", \"ngxMaterialTimepickerTheme\"], [1, \"timepicker\", 3, \"ngClass\"], [1, \"timepicker__header\"], [3, \"format\", \"hour\", \"minute\", \"period\", \"activeTimeUnit\", \"minTime\", \"maxTime\", \"isEditable\", \"editableHintTmpl\", \"minutesGap\", \"hoursOnly\", \"periodChanged\", \"timeUnitChanged\", \"hourChanged\", \"minuteChanged\"], [1, \"timepicker__main-content\"], [1, \"timepicker__body\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"selectedMinute\", \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"period\", \"minutesGap\", \"minuteChange\", 4, \"ngSwitchCase\"], [1, \"timepicker__actions\"], [3, \"click\"], [4, \"ngTemplateOutlet\"], [\"cancelBtnDefault\", \"\"], [\"confirmBtnDefault\", \"\"], [3, \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"hourChange\", \"hourSelected\", 4, \"ngIf\", \"ngIfElse\"], [\"ampmHours\", \"\"], [3, \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"hourChange\", \"hourSelected\"], [3, \"selectedHour\", \"period\", \"minTime\", \"maxTime\", \"hourChange\", \"hourSelected\"], [3, \"selectedMinute\", \"selectedHour\", \"minTime\", \"maxTime\", \"format\", \"period\", \"minutesGap\", \"minuteChange\"]],\n    template: function NgxMaterialTimepickerContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"ngx-material-timepicker-content\", 2)(3, \"div\", 3);\n        i0.ɵɵlistener(\"@timepicker.done\", function NgxMaterialTimepickerContainerComponent_Template_div_animation_timepicker_done_3_listener($event) {\n          return ctx.animationDone($event);\n        });\n        i0.ɵɵelementStart(4, \"header\", 4)(5, \"ngx-material-timepicker-dial\", 5);\n        i0.ɵɵlistener(\"periodChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_periodChanged_5_listener($event) {\n          return ctx.changePeriod($event);\n        })(\"timeUnitChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_timeUnitChanged_5_listener($event) {\n          return ctx.changeTimeUnit($event);\n        })(\"hourChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_hourChanged_5_listener($event) {\n          return ctx.onHourChange($event);\n        })(\"minuteChanged\", function NgxMaterialTimepickerContainerComponent_Template_ngx_material_timepicker_dial_minuteChanged_5_listener($event) {\n          return ctx.onMinuteChange($event);\n        });\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵpipe(7, \"async\");\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7);\n        i0.ɵɵtemplate(11, NgxMaterialTimepickerContainerComponent_div_11_Template, 4, 2, \"div\", 8);\n        i0.ɵɵtemplate(12, NgxMaterialTimepickerContainerComponent_ngx_material_timepicker_minutes_face_12_Template, 4, 13, \"ngx-material-timepicker-minutes-face\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11);\n        i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerContainerComponent_Template_div_click_14_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtemplate(15, NgxMaterialTimepickerContainerComponent_ng_container_15_Template, 1, 0, \"ng-container\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11);\n        i0.ɵɵlistener(\"click\", function NgxMaterialTimepickerContainerComponent_Template_div_click_16_listener() {\n          return ctx.setTime();\n        });\n        i0.ɵɵtemplate(17, NgxMaterialTimepickerContainerComponent_ng_container_17_Template, 1, 0, \"ng-container\", 12);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(18, NgxMaterialTimepickerContainerComponent_ng_template_18_Template, 2, 0, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(20, NgxMaterialTimepickerContainerComponent_ng_template_20_Template, 2, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r4 = i0.ɵɵreference(19);\n\n        const _r6 = i0.ɵɵreference(21);\n\n        let tmp_8_0;\n        let tmp_9_0;\n        i0.ɵɵproperty(\"overlay\", ctx.preventOverlayClick)(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.appendToInput));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appendToInput\", ctx.appendToInput)(\"inputElement\", ctx.inputElement)(\"ngxMaterialTimepickerTheme\", ctx.theme);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@timepicker\", ctx.animationState)(\"ngClass\", ctx.timepickerClass);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"format\", ctx.format)(\"hour\", (tmp_8_0 = i0.ɵɵpipeBind1(6, 23, ctx.selectedHour)) == null ? null : tmp_8_0.time)(\"minute\", (tmp_9_0 = i0.ɵɵpipeBind1(7, 25, ctx.selectedMinute)) == null ? null : tmp_9_0.time)(\"period\", i0.ɵɵpipeBind1(8, 27, ctx.selectedPeriod))(\"activeTimeUnit\", ctx.activeTimeUnit)(\"minTime\", ctx.minTime)(\"maxTime\", ctx.maxTime)(\"isEditable\", ctx.enableKeyboardInput)(\"editableHintTmpl\", ctx.editableHintTmpl)(\"minutesGap\", ctx.minutesGap)(\"hoursOnly\", ctx.hoursOnly);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.activeTimeUnit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.timeUnit.HOUR);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.timeUnit.MINUTE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.cancelBtnTmpl ? ctx.cancelBtnTmpl : _r4);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.confirmBtnTmpl ? ctx.confirmBtnTmpl : _r6);\n      }\n    },\n    directives: [i3.OverlayDirective, i4.NgClass, i5.NgxMaterialTimepickerContentComponent, i6.NgxMaterialTimepickerThemeDirective, i7.NgxMaterialTimepickerDialComponent, i4.NgSwitch, i4.NgSwitchCase, i4.NgIf, i8.NgxMaterialTimepicker24HoursFaceComponent, i9.NgxMaterialTimepicker12HoursFaceComponent, i10.NgxMaterialTimepickerMinutesFaceComponent, i4.NgTemplateOutlet, i11.NgxMaterialTimepickerButtonComponent],\n    pipes: [i4.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{--body-background-color: #fff;--primary-font-family: \\\"Roboto\\\", sans-serif;--button-color: deepskyblue;--dial-active-color: #fff;--dial-inactive-color: rgba(255, 255, 255, .5);--dial-background-color: deepskyblue;--dial-editable-active-color: deepskyblue;--dial-editable-background-color: #fff;--clock-face-time-active-color: #fff;--clock-face-time-inactive-color: #6c6c6c;--clock-face-inner-time-inactive-color: #929292;--clock-face-time-disabled-color: #c5c5c5;--clock-face-background-color: #f0f0f0;--clock-hand-color: deepskyblue}.timepicker-backdrop-overlay[_ngcontent-%COMP%]{position:fixed;inset:0;background-color:#0000004d;z-index:999;pointer-events:auto}.timepicker-backdrop-overlay--transparent[_ngcontent-%COMP%]{background-color:transparent}.timepicker-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;display:flex;justify-content:center;align-items:center;z-index:999;pointer-events:none}.timepicker[_ngcontent-%COMP%]{width:300px;border-radius:2px;box-shadow:#00000040 0 14px 45px,#00000038 0 10px 18px;outline:none;position:static;z-index:999;pointer-events:auto}.timepicker__header[_ngcontent-%COMP%]{padding:15px 30px;background-color:#00bfff}@supports (background-color: var(--dial-background-color)){.timepicker__header[_ngcontent-%COMP%]{background-color:var(--dial-background-color)}}.timepicker__body[_ngcontent-%COMP%]{padding:15px 5px;display:flex;justify-content:center;align-items:center;background-color:#fff}@supports (background-color: var(--body-background-color)){.timepicker__body[_ngcontent-%COMP%]{background-color:var(--body-background-color)}}.timepicker__actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:15px;background-color:#fff}@supports (background-color: var(--body-background-color)){.timepicker__actions[_ngcontent-%COMP%]{background-color:var(--body-background-color)}}@media (max-device-width: 1023px) and (orientation: landscape){.timepicker[_ngcontent-%COMP%]{display:flex;width:515px}.timepicker__header[_ngcontent-%COMP%]{display:flex;align-items:center}.timepicker__main-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%}.timepicker__actions[_ngcontent-%COMP%]{padding:5px;margin-top:-1px}}\"],\n    data: {\n      animation: [trigger('timepicker', [transition(`* => ${AnimationState.ENTER}`, [style({\n        transform: 'translateY(-30%)'\n      }), animate('0.2s ease-out', style({\n        transform: 'translateY(0)'\n      }))]), transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }), animate('0.2s ease-out', style({\n        transform: 'translateY(-30%)',\n        opacity: 0\n      }))])])]\n    }\n  });\n  return NgxMaterialTimepickerContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}